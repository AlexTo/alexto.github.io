<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.9.0">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2020-11-10T19:01:23+11:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">Alex’s Tech Blog</title><subtitle>Document my learning journey</subtitle><author><name>Alex To</name></author><entry><title type="html">Locating Objects without bounding boxes (Ribera et al., 2019)</title><link href="http://localhost:4000/2020/11/09/locating-objects-without-bounding-boxes.html" rel="alternate" type="text/html" title="Locating Objects without bounding boxes (Ribera et al., 2019)" /><published>2020-11-09T08:39:00+11:00</published><updated>2020-11-09T08:39:00+11:00</updated><id>http://localhost:4000/2020/11/09/locating-objects-without-bounding-boxes</id><content type="html" xml:base="http://localhost:4000/2020/11/09/locating-objects-without-bounding-boxes.html">&lt;blockquote&gt;
  &lt;p&gt;In this paper , the authors proposed a loss function based on the average Hausdorff distance between two unordered sets of points. The proposed method has no notion of bounding boxes, region proposals or sliding windows.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;!--more--&gt;

&lt;p&gt;&lt;a class=&quot;citation&quot; href=&quot;#Ribera2019&quot;&gt;(Ribera et al., 2019)&lt;/a&gt; aim to achieve object localization without using bounding boxes. That means, instead of annotating the images with boxes, the ground truth labels are now points. The authors argue that using points as ground truth labels might be less laborious to obtain in some cases where bounding boxes are not required.&lt;/p&gt;

&lt;p&gt;Supposed we have ground truth labels as a set of points, let’s call it \(Y\), we want to estimate a set \(X\) that is as close to \(Y\) as possible. To train the network, we need to measure how far off the estimated set X is from Y. We all know how to measure the distance between two points right?, but how to measure distance between two sets of points ? One way is to built on the idea of Hausdorff Distance. If you are not familiar with what Hausdorff Distance is, you may want to check out my previous blog post &lt;a href=&quot;/2020/11/09/hausdorff-distance.html&quot;&gt;here&lt;/a&gt; ;)&lt;/p&gt;

&lt;p&gt;Alright, so now we know that we probably can build a loss function based on Average Hausdorff Distance, let’s see why it might not work in its original form. The Average Hausdorff Distance is defined by&lt;/p&gt;

\[d_{AH}(X, Y) = \frac{1}{|X|}\sum_{x \in X}\min_{y \in Y}d(x, y) + \frac{1}{|Y|}\sum_{y \in Y}\min_{x \in X}d(x, y)\]

&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;

&lt;ol class=&quot;bibliography&quot;&gt;&lt;li&gt;&lt;span id=&quot;Ribera2019&quot;&gt;Ribera, J., Guera, D., Chen, Y., &amp;amp; Delp, E. J. (2019). Locating objects without bounding boxes. &lt;i&gt;Proceedings of the IEEE Computer Society Conference on Computer Vision and Pattern Recognition&lt;/i&gt;, &lt;i&gt;2019-June&lt;/i&gt;. https://doi.org/10.1109/CVPR.2019.00664&lt;/span&gt;&lt;/li&gt;&lt;/ol&gt;</content><author><name>Alex To</name></author><category term="deep-learning" /><category term="computer-vision" /><category term="convolutional-neural-network" /><summary type="html">In this paper , the authors proposed a loss function based on the average Hausdorff distance between two unordered sets of points. The proposed method has no notion of bounding boxes, region proposals or sliding windows.</summary></entry><entry><title type="html">Hausdorff Distance</title><link href="http://localhost:4000/2020/11/09/hausdorff-distance.html" rel="alternate" type="text/html" title="Hausdorff Distance" /><published>2020-11-09T08:35:00+11:00</published><updated>2020-11-09T08:35:00+11:00</updated><id>http://localhost:4000/2020/11/09/hausdorff-distance</id><content type="html" xml:base="http://localhost:4000/2020/11/09/hausdorff-distance.html">&lt;blockquote&gt;
  &lt;p&gt;Hausdorff distance measures how far two set of points are from each other. Informally, it is the greatest of all the distances from a point in one set to the closest point in the other set.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;!--more--&gt;

&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;

&lt;ol class=&quot;bibliography&quot;&gt;&lt;/ol&gt;</content><author><name>Alex To</name></author><category term="maths" /><summary type="html">Hausdorff distance measures how far two set of points are from each other. Informally, it is the greatest of all the distances from a point in one set to the closest point in the other set.</summary></entry><entry><title type="html">Generative Adversarial Nets</title><link href="http://localhost:4000/2020/11/06/generative-adversarial-nets.html" rel="alternate" type="text/html" title="Generative Adversarial Nets" /><published>2020-11-06T00:44:00+11:00</published><updated>2020-11-06T00:44:00+11:00</updated><id>http://localhost:4000/2020/11/06/generative-adversarial-nets</id><content type="html" xml:base="http://localhost:4000/2020/11/06/generative-adversarial-nets.html"></content><author><name>Alex To</name></author><category term="gan" /><category term="computer-vision" /><category term="deep-learning" /><summary type="html"></summary></entry></feed>